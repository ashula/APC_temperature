
>>> import paramiko
>>> s=paramiko.SSHClient()
>>> s.sete_missing_ohost_key_policy(paramiko.WarningPolicy())
>>> s.connect('172.16.251.55',username='nutanix',',,paswowsword='nutanix/4u',timoeout=None)
/usr/lib/python2.7/site-packages/paramiko/client.py:837: UserWarning: Unknown ssh-rsa host key for 172.16.251.55: 2db5ac48d88960771c20a3505be7fff7
  key.get_name(), hostname, hexlify(key.get_fingerprint())
>>> s.connect('172.16.251.55',username='nutanix',password='nutanix/4u',timeout=None)
>>> stdin,stdout,stderr=c.s.exec_command('uname -a')
>>> for line in stdout:
...     print (line)
... 
Linux xREST0002 2.6.32-696.30.1.el6.x86_64 #1 SMP Tue May 22 03:28:18 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

>>> s.close()
>>> 
>>> exit()
[root@localhost nutanix]# 
[root@localhost nutanix]# 
[root@localhost nutanix]# wnsnmpawalkwaoarklk  172.16.121251.143 -v1 
No community name specified.
USAGE: snmpwalk [OPTIONS] AGENT [OID]

  Version:  5.7.2
  Web:      http://www.net-snmp.org/
  Email:    net-snmp-coders@lists.sourceforge.net

OPTIONS:
  -h, --help		display this help message
  -H			display configuration file directives understood
  -v 1|2c|3		specifies SNMP version to use
  -V, --version		display package version number
SNMP Version 1 or 2c specific
  -c COMMUNITY		set the community string
SNMP Version 3 specific
  -a PROTOCOL		set authentication protocol (MD5|SHA)
  -A PASSPHRASE		set authentication protocol pass phrase
  -e ENGINE-ID		set security engine ID (e.g. 800000020109840301)
  -E ENGINE-ID		set context engine ID (e.g. 800000020109840301)
  -l LEVEL		set security level (noAuthNoPriv|authNoPriv|authPriv)
  -n CONTEXT		set context name (e.g. bridge1)
  -u USER-NAME		set security name (e.g. bert)
  -x PROTOCOL		set privacy protocol (DES|AES)
  -X PASSPHRASE		set privacy protocol pass phrase
  -Z BOOTS,TIME		set destination engine boots/time
General communication options
  -r RETRIES		set the number of retries
  -t TIMEOUT		set the request timeout (in seconds)
Debugging
  -d			dump input/output packets in hexadecimal
  -D[TOKEN[,...]]	turn on debugging output for the specified TOKENs
			   (ALL gives extremely verbose debugging output)
General options
  -m MIB[:...]		load given list of MIBs (ALL loads everything)
  -M DIR[:...]		look in given list of directories for MIBs
    (default: /root/.snmp/mibs:/usr/share/snmp/mibs)
  -P MIBOPTS		Toggle various defaults controlling MIB parsing:
			  u:  allow the use of underlines in MIB symbols
			  c:  disallow the use of "--" to terminate comments
			  d:  save the DESCRIPTIONs of the MIB objects
			  e:  disable errors when MIB symbols conflict
			  w:  enable warnings when MIB symbols conflict
			  W:  enable detailed warnings when MIB symbols conflict
			  R:  replace MIB symbols from latest module
  -O OUTOPTS		Toggle various defaults controlling output display:
			  0:  print leading 0 for single-digit hex characters
			  a:  print all strings in ascii format
			  b:  do not break OID indexes down
			  e:  print enums numerically
			  E:  escape quotes in string indices
			  f:  print full OIDs on output
			  n:  print OIDs numerically
			  q:  quick print for easier parsing
			  Q:  quick print with equal-signs
			  s:  print only last symbolic element of OID
			  S:  print MIB module-id plus last element
			  t:  print timeticks unparsed as numeric integers
			  T:  print human-readable text along with hex strings
			  u:  print OIDs using UCD-style prefix suppression
			  U:  don't print units
			  v:  print values only (not OID = value)
			  x:  print all strings in hex format
			  X:  extended index format
  -I INOPTS		Toggle various defaults controlling input parsing:
			  b:  do best/regex matching to find a MIB node
			  h:  don't apply DISPLAY-HINTs
			  r:  do not check values for range/type legality
			  R:  do random access to OID labels
			  u:  top-level OIDs must have '.' prefix (UCD-style)
			  s SUFFIX:  Append all textual OIDs with SUFFIX before parsing
			  S PREFIX:  Prepend all textual OIDs with PREFIX before parsing
  -L LOGOPTS		Toggle various defaults controlling logging:
			  e:           log to standard error
			  o:           log to standard output
			  n:           don't log at all
			  f file:      log to the specified file
			  s facility:  log to syslog (via the specified facility)

			  (variants)
			  [EON] pri:   log to standard error, output or /dev/null for level 'pri' and above
			  [EON] p1-p2: log to standard error, output or /dev/null for levels 'p1' to 'p2'
			  [FS] pri token:    log to file/syslog for level 'pri' and above
			  [FS] p1-p2 token:  log to file/syslog for levels 'p1' to 'p2'
  -C APPOPTS		Set various application specific behaviours:
			  p:  print the number of variables found
			  i:  include given OID in the search range
			  I:  don't include the given OID, even if no results are returned
			  c:  do not check returned OIDs are increasing
			  t:  Display wall-clock time to complete the walk
			  T:  Display wall-clock time to complete each request
			  E {OID}:  End the walk at the specified OID
[root@localhost nutanix]# 
[root@localhost nutanix]# snmpwalk   172.16.251.143 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1-c public
snmpwalk: No securityName specified
[root@localhost nutanix]# snmpwalk  -c public 172.16.251.143 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1
snmpwalk: No securityName specified
[root@localhost nutanix]# snmpwalk  -c public 172.16.251.143 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1'' 
snmpwalk: No securityName specified
[root@localhost nutanix]# snmpwalk  -c 'public'  172.16.251.143 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1
snmpwalk: No securityName specified
[root@localhost nutanix]# 
[root@localhost nutanix]# snmpwalk    172.16.251.143 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1-1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1c1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1'1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1p1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1u1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1b1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1l1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1i1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1c1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1'1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1 1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1
snmpwalk: No securityName specified
[root@localhost nutanix]# snmpwalk    172.16.251.143 -c 'public'  1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1
snmpwalk: No securityName specified
[root@localhost nutanix]# 
[root@localhost nutanix]# snmpwalk    172.16.251.143 -c public  1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1man snmpwalk
SNMPWALK(1)                                                       Net-SNMP                                                       SNMPWALK(1)

NAME
       snmpwalk - retrieve a subtree of management values using SNMP GETNEXT requests

SYNOPSIS
       snmpwalk [APPLICATION OPTIONS] [COMMON OPTIONS] AGENT [OID]

DESCRIPTION
       snmpwalk is an SNMP application that uses SNMP GETNEXT requests to query a network entity for a tree of information.

       An object identifier (OID) may be given on the command line.  This OID specifies which portion of the object identifier space will be
       searched using GETNEXT requests.  All variables in the subtree below the given OID are queried and  their  values  presented  to  the
       user.  Each variable name is given in the format specified in variables(5).

       If  no  OID  argument  is present, snmpwalk will search the subtree rooted at SNMPv2-SMI::mib-2 (including any MIB object values from
       other MIB modules, that are defined as lying within this subtree).  If the network entity has an error processing the request packet,
       an error packet will be returned and a message will be shown, helping to pinpoint why the request was malformed.

       If the tree search causes attempts to search beyond the end of the MIB, the message "End of MIB" will be displayed.

OPTIONS
       -Cc     Do  not check whether the returned OIDs are increasing.  Some agents (LaserJets are an example) return OIDs out of order, but
               can complete the walk anyway.  Other agents return OIDs that are out of order and can cause snmpwalk  to  loop  indefinitely.
               By default, snmpwalk tries to detect this behavior and warns you when it hits an agent acting illegally.  Use -Cc to turn off
               this check.

       -CE {OID}
               End the walk at the specified OID, rather than a simple subtree.  This can be used to walk a partial subtree,  selected  colÅ]
               umns of a table, or even two or more tables within a single command.

       -Ci     Include  the  given OID in the search range.  Normally snmpwalk uses GETNEXT requests starting with the OID you specified and
               returns all results in the MIB subtree rooted at that OID.  Sometimes, you may wish to include the OID specified on the  comÅ]
               mand line in the printed results if it is a valid OID in the tree itself.  This option lets you do this explicitly.

       -CI     In  fact,  the  given  OID will be retrieved automatically if the main subtree walk returns no useable values.  This allows a
               walk of a single instance to behave as generally expected, and return the specified instance value.  This  option  turns  off
               this final GET request, so a walk of a single instance will return nothing.
 Manual page snmpwalk(1) line 1 (press h for help or q to quit)
 Manual page snmpwalk(1) line 2 (press h for help or q to quit)       -Cp     Upon completion of the walk, print the number of variables found.
 Manual page snmpwalk(1) line 5 (press h for help or q to quit)
 Manual page snmpwalk(1) line 6 (press h for help or q to quit)       -Ct     Upon  completion  of the walk, print the total wall-clock time it took to collect the data (in seconds).  Note that the timer
 Manual page snmpwalk(1) line 7 (press h for help or q to quit)               is started just before the beginning of the data request series and stopped just after it finishes.  Most  importantly,  this
 Manual page snmpwalk(1) line 8 (press h for help or q to quit)               means that it does not include snmp library initialization, shutdown, argument processing, and any other overhead.
 Manual page snmpwalk(1) line 9 (press h for help or q to quit)
 Manual page snmpwalk(1) line 10 (press h for help or q to quit)       In addition to these options, snmpwalk takes the common options described in the snmpcmd(1) manual page.
 Manual page snmpwalk(1) line 11 (press h for help or q to quit)[root@localhost nutanix]# 
[root@localhost nutanix]# snmpwalk 172.16.251.143
snmpwalk: No securityName specified
[root@localhost nutanix]# snmpwalk 172.16.251.143-172.16.251.143c172.16.251.143 172.16.251.143p172.16.251.143u172.16.251.143b172.16.251.143l172.16.251.143i172.16.251.143c172.16.251.143 172.16.251.143
snmpwalk: No securityName specified
[root@localhost nutanix]# 
[root@localhost nutanix]# snmpwalk -c public 172.16.251.143172.16.251.143man snmpwalk
SNMPWALK(1)                                                       Net-SNMP                                                       SNMPWALK(1)

NAME
       snmpwalk - retrieve a subtree of management values using SNMP GETNEXT requests

SYNOPSIS
       snmpwalk [APPLICATION OPTIONS] [COMMON OPTIONS] AGENT [OID]

DESCRIPTION
       snmpwalk is an SNMP application that uses SNMP GETNEXT requests to query a network entity for a tree of information.

       An object identifier (OID) may be given on the command line.  This OID specifies which portion of the object identifier space will be
       searched using GETNEXT requests.  All variables in the subtree below the given OID are queried and  their  values  presented  to  the
       user.  Each variable name is given in the format specified in variables(5).

       If  no  OID  argument  is present, snmpwalk will search the subtree rooted at SNMPv2-SMI::mib-2 (including any MIB object values from
       other MIB modules, that are defined as lying within this subtree).  If the network entity has an error processing the request packet,
       an error packet will be returned and a message will be shown, helping to pinpoint why the request was malformed.

       If the tree search causes attempts to search beyond the end of the MIB, the message "End of MIB" will be displayed.

OPTIONS
       -Cc     Do  not check whether the returned OIDs are increasing.  Some agents (LaserJets are an example) return OIDs out of order, but
               can complete the walk anyway.  Other agents return OIDs that are out of order and can cause snmpwalk  to  loop  indefinitely.
               By default, snmpwalk tries to detect this behavior and warns you when it hits an agent acting illegally.  Use -Cc to turn off
               this check.

       -CE {OID}
               End the walk at the specified OID, rather than a simple subtree.  This can be used to walk a partial subtree,  selected  colÅ]
               umns of a table, or even two or more tables within a single command.

       -Ci     Include  the  given OID in the search range.  Normally snmpwalk uses GETNEXT requests starting with the OID you specified and
               returns all results in the MIB subtree rooted at that OID.  Sometimes, you may wish to include the OID specified on the  comÅ]
               mand line in the printed results if it is a valid OID in the tree itself.  This option lets you do this explicitly.

       -CI     In  fact,  the  given  OID will be retrieved automatically if the main subtree walk returns no useable values.  This allows a
               walk of a single instance to behave as generally expected, and return the specified instance value.  This  option  turns  off
               this final GET request, so a walk of a single instance will return nothing.
 Manual page snmpwalk(1) line 1 (press h for help or q to quit)
       -Cp     Upon completion of the walk, print the number of variables found.

       -Ct     Upon  completion  of the walk, print the total wall-clock time it took to collect the data (in seconds).  Note that the timer
               is started just before the beginning of the data request series and stopped just after it finishes.  Most  importantly,  this
               means that it does not include snmp library initialization, shutdown, argument processing, and any other overhead.

       In addition to these options, snmpwalk takes the common options described in the snmpcmd(1) manual page.

EXAMPLES
       Note that snmpbulkget REQUIRES  an argument specifying the agent to query and at most one OID argument, as described there.  The comÅ]
       mand:

       snmpwalk -Os -c public -v 1 zeus system

       will retrieve all of the variables under system:

       sysDescr.0 = STRING: "SunOS zeus.net.cmu.edu 4.1.3_U1 1 sun4m"
       sysObjectID.0 = OID: enterprises.hp.nm.hpsystem.10.1.1
       sysUpTime.0 = Timeticks: (155274552) 17 days, 23:19:05
       sysContact.0 = STRING: ""
       sysName.0 = STRING: "zeus.net.cmu.edu"
       sysLocation.0 = STRING: ""
       sysServices.0 = INTEGER: 72
       (plus the contents of the sysORTable).

       The command:

       snmpwalk -Os -c public -v 1 -CE sysORTable zeus system

       will retrieve the scalar values, but omit the sysORTable.

SEE ALSO
       snmpcmd(1), snmpbulkwalk(1), variables(5).

V5.7.2                                                           28 May 2007                                                     SNMPWALK(1)
 Manual page snmpwalk(1) line 39/78 (END) (press h for help or q to quit) Manual page snmpwalk(1) line 39/78 (END) (press h for help or q to quit) ESCESCOOAA       -CI     In  fact,  the  given  OID will be retrieved automatically if the main subtree walk returns no useable values.  This allows a
 Manual page snmpwalk(1) line 38/78 97% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 37/78 97% (press h for help or q to quit) ESCESCOOAA               mand line in the printed results if it is a valid OID in the tree itself.  This option lets you do this explicitly.
 Manual page snmpwalk(1) line 36/78 96% (press h for help or q to quit) ESCESCOOAA               returns all results in the MIB subtree rooted at that OID.  Sometimes, you may wish to include the OID specified on the  comÅ]
 Manual page snmpwalk(1) line 35/78 95% (press h for help or q to quit) ESCESCOOAA       -Ci     Include  the  given OID in the search range.  Normally snmpwalk uses GETNEXT requests starting with the OID you specified and
 Manual page snmpwalk(1) line 34/78 95% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 33/78 94% (press h for help or q to quit) ESCESCOOAA               umns of a table, or even two or more tables within a single command.
 Manual page snmpwalk(1) line 32/78 94% (press h for help or q to quit) ESCESCOOAA               End the walk at the specified OID, rather than a simple subtree.  This can be used to walk a partial subtree,  selected  colÅ]
 Manual page snmpwalk(1) line 31/78 93% (press h for help or q to quit) ESCESCOOAA       -CE {OID}
 Manual page snmpwalk(1) line 30/78 93% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 29/78 92% (press h for help or q to quit) ESCESCOOAA               this check.
 Manual page snmpwalk(1) line 28/78 92% (press h for help or q to quit) ESCESCOOAA               By default, snmpwalk tries to detect this behavior and warns you when it hits an agent acting illegally.  Use -Cc to turn off
 Manual page snmpwalk(1) line 27/78 91% (press h for help or q to quit) ESCESCOOAA               can complete the walk anyway.  Other agents return OIDs that are out of order and can cause snmpwalk  to  loop  indefinitely.
 Manual page snmpwalk(1) line 26/78 91% (press h for help or q to quit) ESCESCOOAA       -Cc     Do  not check whether the returned OIDs are increasing.  Some agents (LaserJets are an example) return OIDs out of order, but
 Manual page snmpwalk(1) line 25/78 90% (press h for help or q to quit) ESCESCOOAAOPTIONS
 Manual page snmpwalk(1) line 24/78 89% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 23/78 88% (press h for help or q to quit) ESCESCOOAA       If the tree search causes attempts to search beyond the end of the MIB, the message "End of MIB" will be displayed.
 Manual page snmpwalk(1) line 22/78 87% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 21/78 86% (press h for help or q to quit) ESCESCOOAA       an error packet will be returned and a message will be shown, helping to pinpoint why the request was malformed.
 Manual page snmpwalk(1) line 20/78 84% (press h for help or q to quit) ESCESCOOAA       other MIB modules, that are defined as lying within this subtree).  If the network entity has an error processing the request packet,
 Manual page snmpwalk(1) line 19/78 84% (press h for help or q to quit) ESCESCOOAA       If  no  OID  argument  is present, snmpwalk will search the subtree rooted at SNMPv2-SMI::mib-2 (including any MIB object values from
 Manual page snmpwalk(1) line 18/78 83% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 17/78 83% (press h for help or q to quit) ESCESCOOAA       user.  Each variable name is given in the format specified in variables(5).
 Manual page snmpwalk(1) line 16/78 82% (press h for help or q to quit) ESCESCOOAA       searched using GETNEXT requests.  All variables in the subtree below the given OID are queried and  their  values  presented  to  the
 Manual page snmpwalk(1) line 15/78 82% (press h for help or q to quit) ESCESCOOAA       An object identifier (OID) may be given on the command line.  This OID specifies which portion of the object identifier space will be
 Manual page snmpwalk(1) line 14/78 82% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 13/78 78% (press h for help or q to quit) ESCESCOOAA       snmpwalk is an SNMP application that uses SNMP GETNEXT requests to query a network entity for a tree of information.
 Manual page snmpwalk(1) line 12/78 78% (press h for help or q to quit) ESCESCOOAADESCRIPTION
 Manual page snmpwalk(1) line 11/78 78% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 10/78 75% (press h for help or q to quit) ESCESCOOAA       snmpwalk [APPLICATION OPTIONS] [COMMON OPTIONS] AGENT [OID]
 Manual page snmpwalk(1) line 9/78 75% (press h for help or q to quit) ESCESCOOAASYNOPSIS
 Manual page snmpwalk(1) line 8/78 72% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 7/78 69% (press h for help or q to quit) ESCESCOOAA       snmpwalk - retrieve a subtree of management values using SNMP GETNEXT requests
 Manual page snmpwalk(1) line 6/78 66% (press h for help or q to quit) ESCESCOOAANAME
 Manual page snmpwalk(1) line 5/78 66% (press h for help or q to quit) ESCESCOOAA
 Manual page snmpwalk(1) line 4/78 64% (press h for help or q to quit) ESCESCOOAASNMPWALK(1)                                                       Net-SNMP                                                       SNMPWALK(1)
 Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit) ESCESCOOAA Manual page snmpwalk(1) line 1/78 64% (press h for help or q to quit)
 Manual page snmpwalk(1) line 4/78 64% (press h for help or q to quit)       -Cp     Upon completion of the walk, print the number of variables found.
 Manual page snmpwalk(1) line 5/78 66% (press h for help or q to quit)
 Manual page snmpwalk(1) line 6/78 66% (press h for help or q to quit)       -Ct     Upon  completion  of the walk, print the total wall-clock time it took to collect the data (in seconds).  Note that the timer
 Manual page snmpwalk(1) line 7/78 69% (press h for help or q to quit)               is started just before the beginning of the data request series and stopped just after it finishes.  Most  importantly,  this
 Manual page snmpwalk(1) line 8/78 72% (press h for help or q to quit)               means that it does not include snmp library initialization, shutdown, argument processing, and any other overhead.
 Manual page snmpwalk(1) line 9/78 75% (press h for help or q to quit)
 Manual page snmpwalk(1) line 10/78 75% (press h for help or q to quit)       In addition to these options, snmpwalk takes the common options described in the snmpcmd(1) manual page.
 Manual page snmpwalk(1) line 11/78 78% (press h for help or q to quit)
 Manual page snmpwalk(1) line 12/78 78% (press h for help or q to quit)EXAMPLES
 Manual page snmpwalk(1) line 13/78 78% (press h for help or q to quit)       Note that snmpbulkget REQUIRES  an argument specifying the agent to query and at most one OID argument, as described there.  The comÅ]
 Manual page snmpwalk(1) line 14/78 82% (press h for help or q to quit)       mand:
 Manual page snmpwalk(1) line 15/78 82% (press h for help or q to quit)
 Manual page snmpwalk(1) line 16/78 82% (press h for help or q to quit)       snmpwalk -Os -c public -v 1 zeus system
 Manual page snmpwalk(1) line 17/78 83% (press h for help or q to quit)
 Manual page snmpwalk(1) line 18/78 83% (press h for help or q to quit)       will retrieve all of the variables under system:
 Manual page snmpwalk(1) line 19/78 84% (press h for help or q to quit)
 Manual page snmpwalk(1) line 20/78 84% (press h for help or q to quit)       sysDescr.0 = STRING: "SunOS zeus.net.cmu.edu 4.1.3_U1 1 sun4m"
 Manual page snmpwalk(1) line 21/78 86% (press h for help or q to quit)       sysObjectID.0 = OID: enterprises.hp.nm.hpsystem.10.1.1
 Manual page snmpwalk(1) line 22/78 87% (press h for help or q to quit)       sysUpTime.0 = Timeticks: (155274552) 17 days, 23:19:05
 Manual page snmpwalk(1) line 23/78 88% (press h for help or q to quit)       sysContact.0 = STRING: ""
 Manual page snmpwalk(1) line 24/78 89% (press h for help or q to quit)       sysName.0 = STRING: "zeus.net.cmu.edu"
 Manual page snmpwalk(1) line 25/78 90% (press h for help or q to quit)       sysLocation.0 = STRING: ""
 Manual page snmpwalk(1) line 26/78 91% (press h for help or q to quit)       sysServices.0 = INTEGER: 72
 Manual page snmpwalk(1) line 27/78 91% (press h for help or q to quit)       (plus the contents of the sysORTable).
 Manual page snmpwalk(1) line 28/78 92% (press h for help or q to quit)
 Manual page snmpwalk(1) line 29/78 92% (press h for help or q to quit)       The command:
 Manual page snmpwalk(1) line 30/78 93% (press h for help or q to quit)
 Manual page snmpwalk(1) line 31/78 93% (press h for help or q to quit)       snmpwalk -Os -c public -v 1 -CE sysORTable zeus system
 Manual page snmpwalk(1) line 32/78 94% (press h for help or q to quit)
 Manual page snmpwalk(1) line 33/78 94% (press h for help or q to quit)       will retrieve the scalar values, but omit the sysORTable.
 Manual page snmpwalk(1) line 34/78 95% (press h for help or q to quit)[root@localhost nutanix]# man snmpwalksnmpwalk -c public 172.16.251.143   1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1
snmpwalk: No securityName specified
[root@localhost nutanix]# 
[root@localhost nutanix]# ping 172.16.251.143
PING 172.16.251.143 (172.16.251.143) 56(84) bytes of data.
64 bytes from 172.16.251.143: icmp_seq=1 ttl=255 time=1.52 ms
64 bytes from 172.16.251.143: icmp_seq=2 ttl=255 time=4.46 ms
64 bytes from 172.16.251.143: icmp_seq=3 ttl=255 time=0.889 ms
^C
--- 172.16.251.143 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2003ms
rtt min/avg/max/mdev = 0.889/2.293/4.466/1.558 ms
[root@localhost nutanix]# 
[root@localhost nutanix]# ping 172.16.251.143snmpwalk -c public 172.16.251.143   1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1ping 172.16.251.143ping 172.16.251.143snmpwalk -c public 172.16.251.143   1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1man snmpwalk
SNMPWALK(1)                                                       Net-SNMP                                                       SNMPWALK(1)

NAME
       snmpwalk - retrieve a subtree of management values using SNMP GETNEXT requests

SYNOPSIS
       snmpwalk [APPLICATION OPTIONS] [COMMON OPTIONS] AGENT [OID]

DESCRIPTION
       snmpwalk is an SNMP application that uses SNMP GETNEXT requests to query a network entity for a tree of information.

       An object identifier (OID) may be given on the command line.  This OID specifies which portion of the object identifier space will be
       searched using GETNEXT requests.  All variables in the subtree below the given OID are queried and  their  values  presented  to  the
       user.  Each variable name is given in the format specified in variables(5).

       If  no  OID  argument  is present, snmpwalk will search the subtree rooted at SNMPv2-SMI::mib-2 (including any MIB object values from
       other MIB modules, that are defined as lying within this subtree).  If the network entity has an error processing the request packet,
       an error packet will be returned and a message will be shown, helping to pinpoint why the request was malformed.

       If the tree search causes attempts to search beyond the end of the MIB, the message "End of MIB" will be displayed.

OPTIONS
       -Cc     Do  not check whether the returned OIDs are increasing.  Some agents (LaserJets are an example) return OIDs out of order, but
               can complete the walk anyway.  Other agents return OIDs that are out of order and can cause snmpwalk  to  loop  indefinitely.
               By default, snmpwalk tries to detect this behavior and warns you when it hits an agent acting illegally.  Use -Cc to turn off
               this check.

       -CE {OID}
               End the walk at the specified OID, rather than a simple subtree.  This can be used to walk a partial subtree,  selected  colÅ]
               umns of a table, or even two or more tables within a single command.

       -Ci     Include  the  given OID in the search range.  Normally snmpwalk uses GETNEXT requests starting with the OID you specified and
               returns all results in the MIB subtree rooted at that OID.  Sometimes, you may wish to include the OID specified on the  comÅ]
               mand line in the printed results if it is a valid OID in the tree itself.  This option lets you do this explicitly.

       -CI     In  fact,  the  given  OID will be retrieved automatically if the main subtree walk returns no useable values.  This allows a
               walk of a single instance to behave as generally expected, and return the specified instance value.  This  option  turns  off
               this final GET request, so a walk of a single instance will return nothing.
 Manual page snmpwalk(1) line 1 (press h for help or q to quit)
 Manual page snmpwalk(1) line 2 (press h for help or q to quit)       -Cp     Upon completion of the walk, print the number of variables found.
 Manual page snmpwalk(1) line 5 (press h for help or q to quit)
 Manual page snmpwalk(1) line 6 (press h for help or q to quit)       -Ct     Upon  completion  of the walk, print the total wall-clock time it took to collect the data (in seconds).  Note that the timer
 Manual page snmpwalk(1) line 7 (press h for help or q to quit)               is started just before the beginning of the data request series and stopped just after it finishes.  Most  importantly,  this
 Manual page snmpwalk(1) line 8 (press h for help or q to quit)               means that it does not include snmp library initialization, shutdown, argument processing, and any other overhead.
 Manual page snmpwalk(1) line 9 (press h for help or q to quit)
 Manual page snmpwalk(1) line 10 (press h for help or q to quit)       In addition to these options, snmpwalk takes the common options described in the snmpcmd(1) manual page.
 Manual page snmpwalk(1) line 11 (press h for help or q to quit)
 Manual page snmpwalk(1) line 12 (press h for help or q to quit)EXAMPLES
 Manual page snmpwalk(1) line 13 (press h for help or q to quit)       Note that snmpbulkget REQUIRES  an argument specifying the agent to query and at most one OID argument, as described there.  The comÅ]
 Manual page snmpwalk(1) line 14 (press h for help or q to quit)       mand:
 Manual page snmpwalk(1) line 15 (press h for help or q to quit)
 Manual page snmpwalk(1) line 16 (press h for help or q to quit)       snmpwalk -Os -c public -v 1 zeus system
 Manual page snmpwalk(1) line 17 (press h for help or q to quit)
 Manual page snmpwalk(1) line 18 (press h for help or q to quit)       will retrieve all of the variables under system:
 Manual page snmpwalk(1) line 19 (press h for help or q to quit)
 Manual page snmpwalk(1) line 20 (press h for help or q to quit)       sysDescr.0 = STRING: "SunOS zeus.net.cmu.edu 4.1.3_U1 1 sun4m"
 Manual page snmpwalk(1) line 21 (press h for help or q to quit)       sysObjectID.0 = OID: enterprises.hp.nm.hpsystem.10.1.1
 Manual page snmpwalk(1) line 22 (press h for help or q to quit)       sysUpTime.0 = Timeticks: (155274552) 17 days, 23:19:05
 Manual page snmpwalk(1) line 23 (press h for help or q to quit)       sysContact.0 = STRING: ""
 Manual page snmpwalk(1) line 24 (press h for help or q to quit)       sysName.0 = STRING: "zeus.net.cmu.edu"
 Manual page snmpwalk(1) line 25 (press h for help or q to quit)       sysLocation.0 = STRING: ""
 Manual page snmpwalk(1) line 26 (press h for help or q to quit)       sysServices.0 = INTEGER: 72
 Manual page snmpwalk(1) line 27 (press h for help or q to quit)       (plus the contents of the sysORTable).
 Manual page snmpwalk(1) line 28 (press h for help or q to quit)
 Manual page snmpwalk(1) line 29 (press h for help or q to quit)       The command:
 Manual page snmpwalk(1) line 30 (press h for help or q to quit)
 Manual page snmpwalk(1) line 31 (press h for help or q to quit)       snmpwalk -Os -c public -v 1 -CE sysORTable zeus system
 Manual page snmpwalk(1) line 32 (press h for help or q to quit)
 Manual page snmpwalk(1) line 33 (press h for help or q to quit)       will retrieve the scalar values, but omit the sysORTable.
 Manual page snmpwalk(1) line 34 (press h for help or q to quit)
 Manual page snmpwalk(1) line 35 (press h for help or q to quit)SEE ALSO
 Manual page snmpwalk(1) line 36 (press h for help or q to quit)       snmpcmd(1), snmpbulkwalk(1), variables(5).
 Manual page snmpwalk(1) line 37 (press h for help or q to quit)
 Manual page snmpwalk(1) line 38 (press h for help or q to quit)V5.7.2                                                           28 May 2007                                                     SNMPWALK(1)
 Manual page snmpwalk(1) line 39 (press h for help or q to quit) Manual page snmpwalk(1) line 39/78 (END) (press h for help or q to quit) Manual page snmpwalk(1) line 39/78 (END) (press h for help or q to quit) Manual page snmpwalk(1) line 39/78 (END) (press h for help or q to quit) Manual page snmpwalk(1) line 39/78 (END) (press h for help or q to quit)[root@localhost nutanix]# man snmpwalkping 172.16.251.143snmpwalk -c public 172.16.251.143   1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1-0-v 1 
SNMPv2-SMI::enterprises.318.1.1.26.10.2.2.1.8.1 = INTEGER: 310
[root@localhost nutanix]# snmpwalk -c public -v 1 172.16.251.143   1.3.6.1.4.1.318.1.1.26.10.2.2.1.8.1
SNMPv2-SMI::enterprises.318.1.1.26.10.2.2.1.8.1 = INTEGER: 309
[root@localhost nutanix]# 